<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pinia 学习记录</title>
      <link href="/2024/09/06/study/pinia/"/>
      <url>/2024/09/06/study/pinia/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者使用 npm</span></span><br><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果你的应用使用的 Vue 版本低于 2.7，你还需要安装组合式 API 包：@vue/composition-api。</span></span><br><span class="line">npm install @vue/composition-api</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果是vue2 还需要安装插件</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia, <span class="title class_">PiniaVuePlugin</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">PiniaVuePlugin</span>)</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="comment">// 其他配置...</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 请注意，同一个`pinia&#x27;实例</span></span><br><span class="line">  <span class="comment">// 可以在同一个页面的多个 Vue 应用中使用。 </span></span><br><span class="line">  pinia,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><h4 id="创建全局状态"><a href="#创建全局状态" class="headerlink" title="创建全局状态"></a>创建全局状态</h4><blockquote><p><strong>首先按照国际惯例, 会在项目的 <code>src</code> 目录下创建 <code>store/index.js</code> 文件</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="comment">// 你可以对 `defineStore()` 的返回值进行任意命名，</span></span><br><span class="line"><span class="comment">// 但最好使用 store 的名字，同时以 `use` 开头且以 `Store` 结尾。</span></span><br><span class="line"><span class="comment">// (比如 `useUserStore`，`useCartStore`，`useProductStore`)</span></span><br><span class="line"><span class="comment">// 第一个参数是你的应用中 Store 的唯一 ID。</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&quot;counter&quot;</span>, &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用来存储全局状态 类似于组件的 data</span></span><br><span class="line"><span class="comment">     * 1. 必须是函数: 避免服务端渲染交叉请求导致数据状态污染</span></span><br><span class="line"><span class="comment">     * 2. 必须是箭头函数: 更好的 ts 类型推导</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;hahaha&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类似于组件的 computed, 用于封装计算属性, 有缓存功能</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="attr">double</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类似于组件的 methods, 封装业务逻辑, 修改 state</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="title function_">changeState</span>(<span class="params">a: number, b: string</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">count</span>+=a;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">test</span> = b;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="模板中如何使用"><a href="#模板中如何使用" class="headerlink" title="模板中如何使用"></a>模板中如何使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; counterStore.count &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;button @click=&quot;add&quot;&gt;修改count&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; storeToRefs &#125; from &quot;pinia&quot;</span><br><span class="line">import &#123; useCounterStore &#125; from &quot;@/store&quot;</span><br><span class="line">const counterStore = useCounterStore();</span><br><span class="line">// 这种结构赋值的方法是一次性的, 因为它不是响应式的, 监听不到值的改变</span><br><span class="line">// const &#123; count &#125; = counterStore;</span><br><span class="line">// 怎样使它具有响应式, 使用 pinia 中的 storeToRefs 方法</span><br><span class="line">const &#123; count &#125; = storeToRefs(counterStore);</span><br><span class="line">const add = ()=&gt;&#123;</span><br><span class="line">counterStore.count++</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="修改-state-中的值"><a href="#修改-state-中的值" class="headerlink" title="修改 state 中的值"></a>修改 <code>state</code> 中的值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useCounterStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> counterStore = <span class="title function_">useCounterStore</span>();</span><br></pre></td></tr></table></figure><blockquote><p><strong>方式 1: 直接修改</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleChangeState</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    counterStore.<span class="property">count</span>++</span><br><span class="line">    counterStore.<span class="property">text</span> = <span class="string">&quot;呦呦呦&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>方式 2: 如果需要修改多个值, 建议使用 <code>$patch</code> 批量更新</strong></p></blockquote><p><strong><code>$patch</code> 与普通的多次修改有什么区别?</strong></p><p>普通的多次修改是批量提交, <code>$patch</code> 是内部处理后一次提交</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleChangeState</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    counterStore.$patch(&#123;</span><br><span class="line">        <span class="attr">count</span>: counterStore.<span class="property">count</span>+<span class="number">1</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;哎呦喂&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>方式 3: 更好的批量更新方式 <code>$patch</code> , 一个函数</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleChangeState</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    counterStore.$patch(<span class="function"><span class="params">state</span>=&gt;</span>&#123;</span><br><span class="line">        state.<span class="property">count</span>++;</span><br><span class="line">        state.<span class="property">text</span> = <span class="string">&quot;笑脸给多了?&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>方式 4: 逻辑较多时可以封装到 <code>actions</code> 做处理</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件中</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleChangeState</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    counterStore.<span class="title function_">changeState</span>(<span class="number">1</span>, <span class="string">&quot;你算个der?&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&quot;counter&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;hahaha&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 相当于methods, 直接调用, 可以接受参数</span></span><br><span class="line">    <span class="comment">// 注意不要使用箭头函数, 因为函数内是使用 this 访问 state 中的数据</span></span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="title function_">changeState</span>(<span class="params">a: number, b: string</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">count</span>+=a;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">test</span> = b;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="getters-的使用"><a href="#getters-的使用" class="headerlink" title="getters 的使用"></a><code>getters</code> 的使用</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&quot;counter&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="string">&quot;加10等于&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类似于组件的 computed, 用于封装计算属性, 有缓存功能</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 接受一个可选参数: state状态对象</span></span><br><span class="line">        <span class="attr">double</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span>,</span><br><span class="line">        <span class="title function_">count10</span>(<span class="params">state</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> state.<span class="property">count</span> +<span class="number">10</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 不接受参数时, 使用 this 访问 state 或其他 getters</span></span><br><span class="line">        <span class="comment">// 注意: 在 ts 中, 使用this访问会导致类型推导失败, 需要手动指定返回值的类型</span></span><br><span class="line">        <span class="title function_">splicText</span>(): <span class="built_in">string</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">count</span> + <span class="variable language_">this</span>.<span class="property">test</span> + <span class="variable language_">this</span>.<span class="property">count10</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Pinia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown使用手册</title>
      <link href="/2024/09/06/study/markdown/"/>
      <url>/2024/09/06/study/markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个块引用</span></span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>这是一个块引用</p></blockquote><h2 id="带背景色的文字"><a href="#带背景色的文字" class="headerlink" title="带背景色的文字"></a>带背景色的文字</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`这几个字是有背景的`</span></span><br></pre></td></tr></table></figure><p>效果：<br><code>这几个字是有背景的</code></p><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><table><thead><tr><th><strong>样式名</strong></th><th><strong>效果</strong></th><th><strong>Markdown</strong></th></tr></thead><tbody><tr><td>加粗</td><td><strong>文本</strong></td><td><code>**文本** 或 __文本__</code>，用两个<code>*</code>或两个<code>_</code>包围文本</td></tr><tr><td>斜体</td><td><em>文本</em></td><td><code>*文本* 或 _文本_</code>，用一个<code>*</code>或一个<code>_</code>包围文本</td></tr><tr><td>删除线</td><td><del>文本</del></td><td><code>~~文本~~</code></td></tr><tr><td>下划线</td><td>文本</td><td><code>文本</code></td></tr><tr><td>小号字体</td><td>小号字体</td><td><code>&lt;small&gt;小号字体&lt;/small&gt;</code></td></tr><tr><td>大号字体</td><td><big>大号字体</big></td><td><code>&lt;big&gt;大号字体&lt;/big&gt;</code></td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 这是第一条</span><br><span class="line"><span class="bullet">2.</span> 这是第二条</span><br></pre></td></tr></table></figure><p>效果：</p><ol><li>这是第一条</li><li>这是第二条</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+</span> - * // 都可以</span><br><span class="line"><span class="bullet">+</span> 无序1</span><br><span class="line"><span class="bullet">-</span> 无序2</span><br><span class="line"><span class="bullet">*</span> 无序3</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>无序1</li></ul><ul><li>无序2</li></ul><ul><li>无序3</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote><p><code>:--:</code>中的<code>:</code>是代表文字方向， 在左边文字靠左，在右边文字靠右，两边都有文字居中</p></blockquote><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 姓名 | 年龄 | 性别 |  </span><br><span class="line">| :-- | :--: | --: |  </span><br><span class="line">| 张三 | 20 | 男 |  </span><br><span class="line">| 李四 | 25 | 女 |</span><br></pre></td></tr></table></figure><p>效果：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">性别</th></tr></thead><tbody><tr><td align="left">张三</td><td align="center">20</td><td align="right">男</td></tr><tr><td align="left">李四</td><td align="center">25</td><td align="right">女</td></tr></tbody></table><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><blockquote><p>行内链接的语法是：<code>[链接文字](链接URL)</code>。例如：<code>[百度](https://www.baidu.com)</code>。</p><p>参考链接的语法是：<code>[链接文字][链接标识符]</code>，在文档的任意位置定义链接标识符。</p></blockquote><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>][<span class="symbol">bds</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">bds</span>]: <span class="link">&lt;https://www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><ol><li><a href="https://www.baidu.com/">百度</a></li><li></li></ol><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Markdown</span>](<span class="link">https://pic2.zhimg.com/v2-cd4d4af7717988bfe4edb0db8666ef9d_250x0.jpg?source=172ae18b</span>)</span><br></pre></td></tr></table></figure><p> 效果：</p><p><img src="https://pic2.zhimg.com/v2-cd4d4af7717988bfe4edb0db8666ef9d_250x0.jpg?source=172ae18b" alt="Markdown">    </p><h2 id="代码快"><a href="#代码快" class="headerlink" title="代码快"></a>代码快</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">console.log(&quot;hello Markdown&quot;);</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello Markdown&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css中flex的基本使用方法</title>
      <link href="/2024/09/06/study/flex/"/>
      <url>/2024/09/06/study/flex/</url>
      
        <content type="html"><![CDATA[<h3 id="display-flex"><a href="#display-flex" class="headerlink" title="display:flex;"></a>display:flex;</h3><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061732533.png"></p><h4 id="1-flex-direction"><a href="#1-flex-direction" class="headerlink" title="1.flex-direction:"></a>1.flex-direction:</h4><ul><li>row（默认值）：主轴为水平方向，起点在左端。</li><li>row-reverse：主轴为水平方向，起点在右端。</li><li>column：主轴为垂直方向，起点在上沿。</li><li>column-reverse：主轴为垂直方向，起点在下沿。</li></ul><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061732324.png"></p><h4 id="2-flex-wrap"><a href="#2-flex-wrap" class="headerlink" title="2.flex-wrap:"></a>2.flex-wrap:</h4><ul><li>nowrap（默认）：不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul><h4 id="3-justify-content"><a href="#3-justify-content" class="headerlink" title="3 justify-content:"></a>3 justify-content:</h4><ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061732651.gif" alt="53ee62a61d8a3f4680125227456a9a64.gif"></p><h4 id="4-align-items"><a href="#4-align-items" class="headerlink" title="4 align-items:"></a>4 align-items:</h4><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061733079.gif" alt="742c8e85fb30e95cc067bb84cc473325.gif"></p><h4 id="5-align-content"><a href="#5-align-content" class="headerlink" title="5 align-content:"></a>5 align-content:</h4><p>定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用</p><ul><li>flex-start：与交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li></ul><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061733466.png" alt="f9c710899d98ccb484edde1b8aa6c01c.png"></p><p>结合 <code>justify-content</code>和<code>align-items</code>，看看在 <code>flex-direction</code> 两个不同属性值的作用下，轴心有什么不同：</p><p><img src="https://gitee.com/dwj3245/figurebed/raw/master/images/202409061733748.gif" alt="d106c99365834b0f049c340487670379.gif"></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> CSS </tag>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一条博客</title>
      <link href="/2024/09/04/blog/"/>
      <url>/2024/09/04/blog/</url>
      
        <content type="html"><![CDATA[<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front-matter 是 markdown 文件最上方以<code>---</code>分隔的区域，用于指定个别档案的变数。</p><ul><li>Page Front-matter 用于页面配置</li><li>Post Front-matter 用于文章页配置</li></ul><blockquote><p>如果标注可选的参数，可根据自己需要添加，不用全部都写在markdown里</p></blockquote><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">【必需】页面标题</td></tr><tr><td align="left">date</td><td align="left">【必需】页面创建日期</td></tr><tr><td align="left">type</td><td align="left">【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td align="left">updated</td><td align="left">【可选】页面更新日期</td></tr><tr><td align="left">description</td><td align="left">【可选】页面描述</td></tr><tr><td align="left">keywords</td><td align="left">【可选】页面关键字</td></tr><tr><td align="left">comments</td><td align="left">【可选】显示页面评论模块(默认 true)</td></tr><tr><td align="left">top_img</td><td align="left">【可选】页面顶部图片</td></tr><tr><td align="left">mathjax</td><td align="left">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">katex</td><td align="left">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">aside</td><td align="left">【可选】显示侧边栏 (默认 true)</td></tr><tr><td align="left">aplayer</td><td align="left">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink</td><td align="left">【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">写法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">【必需】文章标题</td></tr><tr><td align="left">date</td><td align="left">【必需】文章创建日期</td></tr><tr><td align="left">updated</td><td align="left">【可选】文章更新日期</td></tr><tr><td align="left">tags</td><td align="left">【可选】文章标籤</td></tr><tr><td align="left">categories</td><td align="left">【可选】文章分类</td></tr><tr><td align="left">keywords</td><td align="left">【可选】文章关键字</td></tr><tr><td align="left">description</td><td align="left">【可选】文章描述</td></tr><tr><td align="left">top_img</td><td align="left">【可选】文章顶部图片</td></tr><tr><td align="left">cover</td><td align="left">【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td align="left">comments</td><td align="left">【可选】显示文章评论模块(默认 true)</td></tr><tr><td align="left">toc</td><td align="left">【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td align="left">toc_number</td><td align="left">【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td align="left">toc_style_simple</td><td align="left">【可选】显示 toc 简洁模式</td></tr><tr><td align="left">copyright</td><td align="left">【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td align="left">copyright_author</td><td align="left">【可选】文章版权模块的文章作者</td></tr><tr><td align="left">copyright_author_href</td><td align="left">【可选】文章版权模块的文章作者链接</td></tr><tr><td align="left">copyright_url</td><td align="left">【可选】文章版权模块的文章连结链接</td></tr><tr><td align="left">copyright_info</td><td align="left">【可选】文章版权模块的版权声明文字</td></tr><tr><td align="left">mathjax</td><td align="left">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">katex</td><td align="left">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td align="left">aplayer</td><td align="left">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink</td><td align="left">【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td align="left">aside</td><td align="left">【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><blockquote><p>注意：我的博客根目录路径为 【G:&#x2F;hexo-blog&#x2F;blog-demo】，下文所说的根目录都是此路径，将用[BlogRoot]代替。如果不清楚根目录路径，请回到教程 基于 Hexo 从零开始搭建个人博客（二），查看你执行hexo init xxx这条命令时所选择的路径，例如我选择的路径是【G:&#x2F;hexo-blog】，我的博客根目录即为【G:&#x2F;hexo-blog&#x2F;xxx】。</p></blockquote><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><ol><li><p>前往你的Hexo博客根目录，打开cmd命令窗口执行 <code>hexo new page tags</code>。</p></li><li><p>在【BlogRoot&#x2F;source&#x2F;】会生成一个含有<code>index.md</code>文件的<code>tags</code>文件夹。</p><p><img src="https://raw.githubusercontent.com/Dwjem/blogImages/master/images202409041618808.png" alt="微信图片_20240904145119"></p></li><li><p>修改【BlogRoot&#x2F;source&#x2F;tags&#x2F;index.md】，添加<code>type: &quot;tags&quot;</code>。</p><table><thead><tr><th align="left">写法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">type</td><td align="left">【必须】页面类型，必须为 tags</td></tr><tr><td align="left">orderby</td><td align="left">【可选】排序方式 ：random&#x2F;name&#x2F;length</td></tr><tr><td align="left">order</td><td align="left">【可选】排序次序： 1, asc for ascending; -1, desc for descending</td></tr></tbody></table></li></ol><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><ol><li><p>前往你的Hexo博客根目录，打开cmd命令窗口执行 <code>hexo new page categories</code>。</p></li><li><p>在【BlogRoot&#x2F;source&#x2F;】会生成一个含有<code>index.md</code>文件的<code>categories</code>文件夹。</p><p> <img src="https://raw.githubusercontent.com/Dwjem/blogImages/master/images202409041620051.png" alt="PixPin_2024-09-04_16-19-53"></p></li><li><p>修改【BlogRoot&#x2F;source&#x2F;categories&#x2F;index.md】，添加<code>type: &quot;categories&quot;</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2022-05-29 21:57:07</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><h3 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a>创建友情链接页面</h3><ol><li><p>前往你的Hexo博客根目录，打开cmd命令窗口执行 <code>hexo new page link</code>。</p></li><li><p>在【BlogRoot&#x2F;source&#x2F;】会生成一个含有 <code>index.md</code> 文件的 <code>link</code> 文件夹。</p><p> <img src="https://raw.githubusercontent.com/Dwjem/blogImages/master/images202409041621109.png" alt="PixPin_2024-09-04_15-12-26"></p></li><li><p>修改【BlogRoot&#x2F;source&#x2F;link&#x2F;index.md】，添加 <code>type: &quot;link&quot;</code>。</p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: link</span><br><span class="line">date: 2022-05-29 22:03:35</span><br><span class="line"><span class="section">type: &quot;link&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="友情链接页面添加友链信息"><a href="#友情链接页面添加友链信息" class="headerlink" title="友情链接页面添加友链信息"></a>友情链接页面添加友链信息</h3><p>前往Hexo博客目录（【BlogRoot&#x2F;source&#x2F;_data】）创建一个文件 <code>link.yml</code>（如果沒有 _data 文件夹，请自行创建）。</p> <img src="https://raw.githubusercontent.com/Dwjem/blogImages/master/images202409041622029.png" alt="PixPin_2024-09-04_15-19-35"  /><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> class<span class="emphasis">_name: 友情链接</span></span><br><span class="line"><span class="emphasis">  class_</span>desc: 那些人，那些事</span><br><span class="line">  link<span class="emphasis">_list:</span></span><br><span class="line"><span class="emphasis">    - name: 唐志远</span></span><br><span class="line"><span class="emphasis">      link: https://fe32.top/</span></span><br><span class="line"><span class="emphasis">      avatar: https://bu.dusays.com/2022/05/02/626f92e193879.jpg</span></span><br><span class="line"><span class="emphasis">      descr: 古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。</span></span><br><span class="line"><span class="emphasis">- class_</span>name: 网站</span><br><span class="line">  class<span class="emphasis">_desc: 值得推荐的网站</span></span><br><span class="line"><span class="emphasis">  link_</span>list:</span><br><span class="line"><span class="bullet">    -</span> name: Twitter</span><br><span class="line"><span class="code">      link: https://twitter.com/</span></span><br><span class="line"><span class="code">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line"><span class="code">      descr: 社交分享平台</span></span><br></pre></td></tr></table></figure><p><code>class_name</code> 和 <code>class_desc</code> 支持 html 格式，如不需要，也可以留空。</p><p>如果你想设置成本站友链页的效果，请参考教程：<a href="https://akilar.top/posts/615e2dec/">基于Butterfly的外挂标签引入</a> 。</p><h2 id="图库"><a href="#图库" class="headerlink" title="图库"></a>图库</h2><p>图库页面只是普通的页面，你只需要 <code>hexo new page xxxxx</code> 创建你的页面就行。</p><p>然后使用标签外挂 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">galleryGroup</a>，具体用法请查看对应的内容。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;gallery-group-main&quot;&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;壁纸&#x27;</span> <span class="string">&#x27;收藏的一些壁紙&#x27;</span> <span class="string">&#x27;/Gallery/wallpaper&#x27;</span> <span class="string">https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;漫威&#x27;</span> <span class="string">&#x27;關於漫威的圖片&#x27;</span> <span class="string">&#x27;/Gallery/marvel&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;OH MY GIRL&#x27;</span> <span class="string">&#x27;關於OH MY GIRL的圖片&#x27;</span> <span class="string">&#x27;/Gallery/ohmygirl&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><h3 id="子页面"><a href="#子页面" class="headerlink" title="子页面"></a>子页面</h3><p>子页面也是普通的页面，你只需要 <code>hexo new page xxxxx</code> 创建你的页面就行。</p><p>然后使用标签外挂 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A">gallery</a>，具体用法请查看对应的内容。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">gallery</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endgallery</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-items">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</div>    </div><h2 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h2><p>主題內置了一个简单的404页面，可在设置中开放。</p><blockquote><p>如需本地预览，请访问 <a href="http://localhost:4000/404.html">http://localhost:4000/404.html</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># A simple 404 page</span><br><span class="line">error_404:</span><br><span class="line">  enable: true</span><br><span class="line">  subtitle: &quot;页面沒有找到&quot;</span><br><span class="line">  background: </span><br></pre></td></tr></table></figure><p>转载自作者: 唐志远<br>链接: <a href="https://fe32.top/articles/hexo1604/">https://fe32.top/articles/hexo1604/</a><br>来源: <a href="https://fe32.top/">唐志远</a><br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
